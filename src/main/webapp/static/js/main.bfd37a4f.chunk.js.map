{"version":3,"sources":["containers/Chatbot/Feedback/Feedback.module.css","containers/Chatbot/ChatbotHeader/ChatbotHeader.module.css","containers/Chatbot/ChatbotBody/Message/Sound/Sound.module.css","containers/Chatbot/ChatbotBody/ChatbotBody.module.css","containers/Chatbot/MessageInput/MessageInput.module.css","components/Home/Navbar/images/DFILogo.png","components/Admin/Navbar/images/DFILogo.png","components/Admin/AdminFeedback/FeedbackTable/FeedbackTable.module.css","components/Admin/AdminFeedback/RatingTable/RatingTable.module.css","components/Home/Hero/Hero.js","components/Home/AboutUs/AboutUs.js","components/Home/Features/Features.js","containers/Chatbot/Feedback/Feedback.js","containers/Chatbot/ChatbotHeader/ChatbotHeader.js","containers/Chatbot/ChatbotBody/Message/Sound/Sound.js","containers/Chatbot/ChatbotBody/Message/Rating/Rating.js","containers/Chatbot/ChatbotBody/Message/Message.js","containers/Chatbot/ChatbotBody/ChatbotBody.js","containers/Chatbot/MessageInput/MessageInput.js","containers/Chatbot/Chatbot.js","components/Home/Navbar/Navbar.js","components/Home/Login/Login.js","components/Home/Footer/Footer.js","components/Home/Home.js","components/Admin/AdminDocuments/DocumentsTable/DocumentRow/DocumentRow.js","components/Admin/AdminDocuments/DocumentsTable/DocumentsTable.js","components/Admin/AdminDocuments/DragAndDrop/DragAndDrop.js","components/Admin/Navbar/Navbar.js","components/Admin/AdminDocuments/PieChart/PieChart.js","components/Admin/AdminDocuments/AdminDocuments.js","components/Admin/AdminFeedback/FeedbackTable/FeedbackRow/FeedbackRow.js","components/Admin/AdminFeedback/FeedbackTable/FeedbackTable.js","components/Admin/AdminFeedback/RatingTable/RatingRow/RatingRow.js","components/Admin/AdminFeedback/RatingTable/RatingTable.js","components/Admin/AdminFeedback/AdminFeedback.js","components/Admin/AdminCrawler/CrawlerTable/CrawlerRow/CrawlerRow.js","components/Admin/AdminCrawler/CrawlerTable/CrawlerTable.js","components/Admin/AdminCrawler/AdminCrawler.js","components/Admin/AdminReset/AdminReset.js","App.js","serviceWorker.js","index.js","containers/Chatbot/ChatbotBody/Message/Message.module.css","containers/Chatbot/Chatbot.module.css","components/Home/AboutUs/AboutUs.module.css","components/Home/Features/Features.module.css","containers/Chatbot/ChatbotBody/Message/Rating/Rating.module.css","components/Home/Login/Login.module.css"],"names":["module","exports","paper","root","shadow","playButton","__webpack_require__","p","ScrollableTable","useStyles","makeStyles","theme","zIndex","width","height","backgroundImage","overflowY","title","flexGrow","top","position","color","Hero","classes","react_default","a","createElement","Fragment","Container","maxWidth","className","Typography","component","variant","align","Box","marginTop","particles_default","params","particles","number","value","aboutUs","AboutUs","Picture","Text","features","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","formControl","display","closeButton","right","unit","grey","Feedback","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","_React$useState3","rating","comment","_React$useState4","values","setValues","handleClose","submitFeedback","_ref","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","comments","axios","post","qs","stringify","then","response","catch","error","console","log","stop","_x","_x2","apply","this","arguments","Button","type","onClick","Modal","aria-labelledby","aria-describedby","onClose","media","id","IconButton","aria-label","Close_default","TextField","label","multiline","rowsMax","style","onChange","event","objectSpread","target","margin","FormControl","InputLabel","htmlFor","Select","oldValues","inputProps","name","MenuItem","float","menuButton","marginRight","ChatbotHeader","props","anchorEl","setAnchorEl","AppBar","Toolbar","edge","currentTarget","Menu_default","bottom","clickHandler","Minimize_default","Menu_Menu","keepMounted","Boolean","Chatbot_Feedback_Feedback","Sound","state","playing","handlePlay","_this","speak","setState","speech","Speech","hasBrowserSupport","setLanguage","text","queue","listeners","onstart","onend","onresume","onboundary","e","PlayArrow_default","Component","BotRating","submittedFeedback","setSubmittedFeedback","good","setGood","_React$useState5","_React$useState6","bad","setBad","goodStyling","badStyling","message","Array","isArray","forEach","word","answerRating","mb","mt","mr","borderColor","Grid","container","item","xs","ThumbDown_default","Rating","ThumbUp_default","Message","textToSpeechMessageWatson","textToSpeechMessageLucene","errorMessage","messageWatson","messageLucene","rootClasses","luceneText","lucenePicture","luceneLink","luceneFile","watsonText","watsonPicture","watsonLink","watsonFile","watsonFilename","generateTextToSpeechMessage","luceneFilename","generateTextToSpeechMessageLucene","showing","OpacityLow","showClickHandler","avatar2","Message_Sound_Sound","textAlign","fontWeight","fontSize","letterSpacing","marginBottom","border","textBot","wordWrap","href","wordBreak","src","alt","textAight","lucenenPicture","textHuman","ChatbotBody","messages","map","index","ChatbotBody_Message_Message","key","watson","picture","link","filename","file","lucene","Paper","clear","secondary","textField","marginLeft","icon","&:hover","transition","MessageInput","onSubmit","addMessageHandler","autoComplete","borderTopRightRadius","borderTopLeftRadius","placeholder","Fab","size","Send_default","flexDirection","flexWrap","bottomRightPosition","outline","Chatbot","showChatbot","question","answer","useEffect","scrollBottom","document","getElementById","scrollIntoView","behavior","chatbotClickHandler","newStatus","chatbot","Grow","in","Shadow","Chatbot_ChatbotHeader_ChatbotHeader","Chatbot_ChatbotBody_ChatbotBody","length","Chatbot_MessageInput_MessageInput","preventDefault","userMessage","test","newMessages","concat","toConsumableArray","getMessage","messageArray","split","convertToGet","get","botMessage","watsonObject","image","replace","getWatsonImage","getWatsonLink","getWatsonFileName","getWatsonFilePassage","getWatsonMessage","getWatsonObject","luceneMessage","getLuceneImage","getLuceneLink","getLuceneFilename","getLuceneFilePassage","getLuceneMessage","getLuceneObject","newMessagesBot","arrayLength","Chat_default","preload","controls","overflowX","button","input","navbar","Navbar2","navbarLinks","loggedIn","react_router_dom","to","logOutHandler","modalClickHandler","elevation","logo","login","displayStyle","showModal","loginHandler","method","footer","home","body","Login","Navbar_Navbar","Home_Hero_Hero","Features","Footer","containers_Chatbot_Chatbot","documentRow","date","removeFileHandler","documentsTable","files","i","itemArray","DocumentRow","fileName","DragAndDrop","dragging","dropRef","createRef","handleDrag","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","handleDragOut","handleDrop","clearData","div","current","addEventListener","removeEventListener","ref","left","children","Navbar","PieChart","_useState","initialPoints","_useState2","setData","pieOptions","sliceVisibilityThreshold","pieHole","legend","alignment","textStyle","tooltip","showColorCode","chartArea","fontName","index_esm","chartType","loader","options","rootProps","data-testid","legend_toggle","dragAndDrop","borderRadius","AdminDocuments","viewAllFilesHandler","viewGraphHandler","setFiles","addAllFilesHandler","listFiles","addFileHandler","_ref2","_callee2","_context2","FormData","append","getCsvOfData","_ref3","_callee3","data2","_context3","getQueries","url","window","URL","createObjectURL","Blob","setAttribute","appendChild","click","admin","Admin_Navbar_Navbar","AdminDocuments_DragAndDrop_DragAndDrop","fileList","push","DocumentsTable","AdminDocuments_PieChart_PieChart","vTitle","hTitle","queries","feedbackRow","feedbackTable","feedback","FeedbackRow","ratingRow","ratingTable","RatingRow","AdminFeedback","viewAllFeedback","viewAllAnswerRating","setFeedback","setAnswerRating","average","setAverage","getCsvOfFeedback","getFeedback","getCsvOfRating","_ref4","_callee4","_context4","getAnswerRating","FeedbackTable","RatingTable","crawlerRow","removeSiteHandler","crawlerTable","sites","CrawlerRow","AdminCrawler","crawledStatus","setCrawledStatus","setSites","crawl","depth","action","getCrawledSites","CrawlerTable","reset","setReset","reindex","setReindex","resetData","reindexData","App","username1","password1","elements","username","password","status","file2","viewAllFeedbackHandler","_this2","react_router","exact","path","render","Home","assign","Admin_AdminDocuments_AdminDocuments","Admin_AdminFeedback_AdminFeedback","Admin_AdminCrawler_AdminCrawler","AdminReset","location","hostname","match","createMuiTheme","primary","light","main","dark","typography","useNextVariants","ReactDOM","MuiThemeProvider","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bfd37a4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"Feedback_paper__3X2Pr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatbotHeader_root__1x9H9\",\"shadow\":\"ChatbotHeader_shadow__3zO9N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playButton\":\"Sound_playButton__qLYB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatbotBody_root__2DNhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MessageInput_root__3Exdq\"};","module.exports = __webpack_public_path__ + \"static/media/DFILogo.742bc46a.png\";","module.exports = __webpack_public_path__ + \"static/media/DFILogo.742bc46a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ScrollableTable\":\"FeedbackTable_ScrollableTable__vfdD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ScrollableTable\":\"RatingTable_ScrollableTable__22SH-\"};","import React from \"react\";\nimport Particles from \"react-particles-js\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\n/**\n * Component for the hero image in Home\n */\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: \"-999\",\n    width: \"100vw\",\n    height: \"90vh\",\n    backgroundImage: \"linear-gradient(#1e3c72, #2a5298)\",\n    overflowY: \"hidden\"\n  },\n\n  title: {\n    flexGrow: 1,\n    top: \"30%\",\n    position: \"relative\",\n    color: \"white\"\n  }\n}));\n\nconst Hero = () => {\n  const classes = useStyles();\n  const particleOptions = {\n    particles: {\n      number: {\n        value: 80\n      }\n    }\n  };\n  return (\n    <React.Fragment>\n      <Container maxWidth={false} className={classes.root}>\n        <Typography\n          className={classes.title}\n          component=\"h3\"\n          variant=\"h3\"\n          align=\"center\"\n        >\n          DFI's Next Solution\n        </Typography>\n        <Box className={classes.title} marginTop={5}>\n          <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n            Think Tank for Financial Technology, Artificial Intelligence &\n            Blockchain\n          </Typography>\n        </Box>\n        <Particles params={particleOptions} />\n      </Container>\n    </React.Fragment>\n  );\n};\nexport default Hero;\n","import React from 'react';\nimport classes from './AboutUs.module.css';\n\n/**\n * Component for displaying dummy text on the home page\n * about our chatbot, mostly filler content\n */\nconst aboutUs = () => {\n    return (\n        <div className={classes.AboutUs}>\n\n            <div className={classes.Picture}>\n\n            </div>\n            <div className={classes.Text}>\n                <h2>What is a chatbot?</h2>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>\n            </div>\n        </div>\n    );\n};\n\nexport default aboutUs;","import React from 'react';\nimport classes from './Features.module.css';\n\n/**\n * Component for displaying dummy text on the home page\n * about our chatbot, mostly filler content\n */\nconst features = () => {\n    return (\n        <div className={classes.AboutUs}>\n            <div className={classes.Text}>\n                <h2>How Are We Unique?</h2>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n                     ex ea commodo consequat. Duis aute irure dolor\n                     in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>\n            </div>\n            <div className={classes.Picture}>\n\n            </div>\n        </div>\n    );\n};\n\nexport default features;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from '@material-ui/core/IconButton'\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CloseIcon from '@material-ui/icons/Close'\nimport media from \"./Feedback.module.css\";\nimport qs from \"qs\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 4)\n  },\n  formControl: {\n    width: \"200px\",\n    display: \"block\"\n  },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing.unit / 2,\n      top: theme.spacing.unit / 2,\n      color: theme.palette.grey[500],\n    }\n}));\n\n/**\n * Component represents a modal for users to submit feedback on the chatbot\n */\nconst Feedback = () => {\n  const classes = useStyles();\n\n  /**\n   * variables hold info on whetehr modal is open or not\n   */\n  const [open, setOpen] = React.useState(false);\n\n  /**\n   * values used to contain feedback on chatbot\n   */\n  const [values, setValues] = React.useState({\n    rating: 1,\n    comment: \"\"\n  });\n\n  /**\n   * function opens the modal\n   */\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  /**\n   * function closes the modal\n   */\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  /**\n   * Function is sued to submit feedback on how the chatbot is rpeforming\n   * @param {int} rating - rating of the chatbot\n   * @param {string} comment - a comment the user has about the chatbot\n   */\n  const submitFeedback = async (rating, comment) => {\n    let data = {\n      comments: comment,\n      rating: rating\n    };\n    await axios\n      .post(\"/feedback\", qs.stringify(data))\n      .then(response => {})\n      .catch(function(error) {\n        console.log(error);\n      });\n    handleClose();\n  };\n\n  /**\n   * function is used to record what the user rated the chatbot\n   * @event\n   */\n  function handleChangeSelect(event) {\n    setValues(oldValues => ({\n      ...oldValues,\n      rating: event.target.value\n    }));\n  }\n\n  /**\n   * function is used to record users message on the chatbot\n   * @event\n   */\n  const handleChangeText = event => {\n    setValues({ ...values, comment: event.target.value });\n  };\n\n  return (\n    <div>\n      <Button type=\"button\" onClick={handleOpen}>\n        Feedback\n      </Button>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div className={classes.paper + \" \" + media.paper}>\n        <div>\n        <h4 id=\"modal-title\">Let us know how we did!</h4>\n        <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n          <p>Any questions you didn’t get a response?  Let us know here!</p>\n        </div>\n          <TextField\n            id=\"comment\"\n            label=\"Response\"\n            multiline\n            rowsMax=\"20\"\n            style={{ width: \"100%\" }}\n            onChange={handleChangeText}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"rating\">How did we do?</InputLabel>\n            <Select\n              value={values.rating}\n              onChange={handleChangeSelect}\n              inputProps={{\n                name: \"Rating\",\n                id: \"rating\"\n              }}\n            >\n              <MenuItem value={1}>1</MenuItem>\n              <MenuItem value={2}>2</MenuItem>\n              <MenuItem value={3}>3</MenuItem>\n              <MenuItem value={4}>4</MenuItem>\n              <MenuItem value={5}>5</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Button\n            type=\"button\"\n            onClick={() => submitFeedback(values.rating, values.comment)}\n            variant=\"contained\"\n            style={{ float: \"right\", display: \"block\" }}\n            color=\"secondary\"\n          >\n            Submit your Response\n          </Button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Feedback;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Minimize from \"@material-ui/icons/Minimize\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FeedbackModal from \"../Feedback/Feedback\";\nimport media from \"./ChatbotHeader.module.css\";\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: { flexGrow: 1 }\n}));\n/**\n * Component representing header of chatbot\n */\nconst ChatbotHeader = props => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  // Opens chatbot menu\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n  // Closes chatbot menu\n  function handleClose() {\n    setAnchorEl(null);\n  }\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\" className={media.root}>\n        <Box boxShadow={3}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              onClick={handleClick}\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n\n            <Typography variant=\"h5\" className={classes.title}>\n              {props.title}\n            </Typography>\n\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              style={{ position: \"relative\", bottom: \"5px\" }}\n              onClick={props.clickHandler}\n              color=\"inherit\"\n            >\n              <Minimize style={{ position: \"relative\", bottom: \"5px\" }} />\n            </IconButton>\n          </Toolbar>\n        </Box>\n      </AppBar>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>\n          {\" \"}\n          <FeedbackModal />\n        </MenuItem>\n      </Menu>\n    </React.Fragment>\n  );\n};\n\nexport default ChatbotHeader;\n","import React from \"react\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\nimport classes from \"./Sound.module.css\";\nimport Speech from \"speak-tts\";\n\n/**\n * Component represents a playbutton that users can click to play a message\n * that Lucene or Watson responsds with\n */\nclass Sound extends React.Component {\n  /**\n   * playing controls whether or not the text to speech message plays\n   */\n  state = {\n    playing: false\n  };\n\n  /**\n   * Sets the state of playing to true and activates the speak function\n   */\n  handlePlay = () => {\n    this.speak();\n    \n    this.setState({\n      playing: true\n    });\n  };\n\n  /**\n   * Plays back the message from Watson or Lucene using speak-tts\n   */\n  speak = () => {\n    const speech = new Speech();\n\n    if (speech.hasBrowserSupport()) {\n      // returns a boolean\n     // console.log(\"speech synthesis supported\");\n    }\n    speech.setLanguage(\"en-US\");\n\n    speech\n      .speak({\n        text: this.props.text,\n        queue: false, // current speech will be interrupted,\n        listeners: {\n          onstart: () => {\n         //   console.log(\"Start utterance\");\n          },\n          onend: () => {\n        //    console.log(\"End utterance\");\n          },\n          onresume: () => {\n         //   console.log(\"Resume utterance\");\n          },\n          onboundary: event => {\n          /*  console.log(\n              event.name +\n                \" boundary reached after \" +\n                event.elapsedTime +\n                \" milliseconds.\"\n            );*/\n          }\n        }\n      })\n      .then(() => {\n        //console.log(\"Success !\");\n      })\n      .catch(e => {\n       // console.error(\"An error occurred :\", e);\n      });\n  };\n  render() {\n    return (\n      <div>\n        <PlayArrow className={classes.playButton} onClick={this.handlePlay} />\n      </div>\n    );\n  }\n}\n\nexport default Sound;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport Box from '@material-ui/core/Box';\nimport axios from 'axios';\nimport classes from './Rating.module.css';\nimport Grid from \"@material-ui/core/Grid\";\nimport qs from 'qs';\n\n/**\n * Component represents a rating for a message coming back from watson or lucene\n * @param props\n *  {string, [string]} message- Message from either watson or lucene\n */\nconst BotRating = (props) => {\n  // Feedback can only be submitted once so this bool is used to track whether\n  // feedback has been submitted or not\n  const [submittedFeedback, setSubmittedFeedback] = React.useState(false);\n\n  const [good, setGood] = React.useState(false);\n  const [bad, setBad] = React.useState(false);\n  /**\n   * styles are used as a visual cue to the user indicating that they have\n   * rated the question\n   */\n  let goodStyling= null;\n  let badStyling = null;\n  // if the user rated the question as good then the color is green and  red for bad\n  if(good){\n    goodStyling = {color:'green'};\n  }\n  if(bad){\n    badStyling = {color:'red'};\n  }\n  /**\n   * Function is used to send a rating to the back end which is recorded in the database\n   * along with the message\n   * @param {string} rating - Either \"Good\" or \"Bad\"\n   */\n  const submitFeedback = async (rating) =>{\n    if(submittedFeedback === false){\n      let message = \"\";\n    if (Array.isArray(props.message)){\n      props.message.forEach(function(word){\n        message += word + \" \";\n      });\n    }\n    else{\n      message = props.message;\n    }\n  \n    if(submittedFeedback === false){\n      const data = {\n        message: message,\n        answerRating: rating\n      }\n   \n    await axios\n    .post(\"/answerrating\", qs.stringify(data))\n    .then(response => {\n    \n      setSubmittedFeedback(true);\n      // Update thumbs up or down with styling for visual feedback\n      if(rating === \"Good\"){\n        setGood(true);\n      }\n      else{\n        setBad(true);\n      }\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n  }\n\n  }\n}\n\n\n  return (\n    <div>\n      <Box component=\"fieldset\" mb={3} mt={1} mr={8} borderColor=\"transparent\">\n        <Typography component=\"legend\" align=\"right\" variant=\"body1\">How did I do?\n        <Grid container spacing={0}>\n        <Grid item xs={6}>\n         <ThumbDown className={classes.Rating} onClick={()=>submitFeedback(\"Bad\") } style={badStyling}/>\n        </Grid>\n        <Grid item xs={6}>\n        <ThumbUp className={classes.Rating} onClick={()=>submitFeedback(\"Good\") }style={goodStyling}/> \n        </Grid>\n        </Grid>\n        </Typography>\n      </Box>\n     </div>\n  );\n}\n\n\nexport default BotRating;","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport classes from \"./Message.module.css\";\nimport SoundClass from \"./Sound/Sound\";\nimport Rating from './Rating/Rating';\n/**\n * Component representing a repsosne from watson and lucene\n * @param {*} props\n *  @param {string} watsonText = message from Watson\n *  @param {string} watsonPicture = picture from Watson\n *  @param {string} watsonLink = Link from Watson\n *  @param {string} watsonFile = File from Watson\n *  @param {string} luceneText = message from Lucene\n *  @param {string} lucenePicture = picture from Lucene\n *  @param {string} luceneLink = link from Watson\n *  @param {string} luceneFile = file from Lucene\n */\nconst Message = props => {\n  // If we recieve information from watson or lucene the messages will be filled in and displayed\n  let message = null;\n  let errorMessage = null;\n  let messageWatson = null;\n  let messageLucene = null;\n  let rootClasses = null;\n  let textToSpeechMessageWatson = null;\n  let textToSpeechMessageLucene = null;\n\n  /**\n   * Generates a text to speech message based off of everything watson responds with\n   * @param props\n   * @param {string} errorMessage - if there is nothing in error message then this means watson has something\n   * to respond with otherwise the text to speech message becomes the error message\n   */\n  const generateTextToSpeechMessage = (props, errorMessage) => {\n    let message = \"\";\n    if (errorMessage != null) {\n      message = errorMessage;\n    } else {\n      if (props.watsonText) {\n        message += props.watsonText + \" \";\n      }\n      if (props.watsonFilename && props.watsonFile) {\n        message +=\n          \"Also, look at what we found from \" +\n          props.watsonFilename +\n          \" \" +\n          props.watsonFile;\n      }\n    }\n    return message;\n  };\n\n  /**\n   * Generates a text to speech message based off of everything Lucene responds with\n   * @param props\n   * @param {string} errorMessage - if there is nothing in error message then this means Lucene has something\n   * to respond with otherwise the text to speech message becomes the error message\n   */\n  const generateTextToSpeechMessageLucene = (props, errorMessage) => {\n    let message = \"\";\n    if (errorMessage != null) {\n      message = errorMessage;\n    } else {\n      if (props.luceneText) {\n        message += props.luceneText + \" \";\n      }\n      if (props.luceneFilename && props.luceneFile) {\n        message +=\n          \"Also, look at what we found from \" +\n          props.luceneFilename +\n          \" \" +\n          props.luceneFile;\n      }\n    }\n    return message;\n  };\n\n  if (\n    !props.luceneText &&\n    !props.lucenePicture &&\n    !props.luceneLink &&\n    !props.luceneFile &&\n    !props.watsonText &&\n    !props.watsonPicture &&\n    !props.watsonLink &&\n    !props.watsonFile\n  ) {\n    errorMessage =\n      \"Oops, I couldn't find that.  I've dispatched the whole DFI team to resolve this\";\n  }\n\n  textToSpeechMessageWatson = generateTextToSpeechMessage(props, errorMessage);\n  textToSpeechMessageLucene = generateTextToSpeechMessageLucene(\n    props,\n    errorMessage\n  );\n\n  if (props.showing) {\n    rootClasses = classes.root;\n  } else {\n    rootClasses = classes.root + \" \" + classes.OpacityLow;\n  }\n  if (props.type === \"bot\") {\n    messageWatson = (\n      <React.Fragment>\n       \n\n        <Grid\n          container\n          spacing={1}\n          style={{ margin: \"10px\" }}\n          className={rootClasses}\n          onClick={props.showClickHandler}\n        >\n          \n          <Grid item xs={2} style={{ marginRight: \"0px\" }}>\n            <div className={classes.avatar2} />\n          </Grid>\n          \n          <Grid item xs={10}>\n          <SoundClass text={textToSpeechMessageWatson} />\n            <p\n              style={{\n                textAlign: \"left\",\n                fontWeight: \"500\",\n                color: \"#424242\",\n                fontSize: \"0.8em\",\n                letterSpacing: \"0.0.8em\",\n                marginBottom: \"5px\"\n              }}\n            >\n              Alex's response{\" \"}\n            </p>\n            <Box\n              boxShadow={1}\n              style={{ border: \"1px solid rgba(0,0,0,0.03)\" }}\n              className={classes.text + \" \" + classes.textBot}\n            >\n              <p\n                style={{\n                  fontSize: \"1.0em\",\n                  padding: \"0px\",\n                  marginTop: \"0px\",\n                  marginBottom: \"0px\",\n                  wordWrap: \"break-word\"\n                }}\n              >\n                {props.watsonText ? props.watsonText : null}\n\n                {errorMessage}\n                {props.watsonLink ? (\n                  <a\n                    href={props.watsonLink}\n                    style={{ display: \"block\", wordBreak: \"break-word\" }}\n                  >\n                    {props.watsonLink}\n                  </a>\n                ) : null}\n              </p>\n              {props.watsonPicture ? (\n                <img\n                  src={props.watsonPicture}\n                  width=\"100px\"\n                  height=\"100px\"\n                  alt=\"DFI visual\"\n                />\n              ) : null}\n              {props.watsonFile ? (\n                <p>\n                  Look at what we found from{props.watsonFilename}: <br />\n                  {props.watsonFile}\n                </p>\n              ) : null}\n             \n            </Box>\n            <Rating style={{position:'relative', textAight:'right'}} message={props.watsonText}/>\n          </Grid>\n        \n        </Grid>\n       \n       \n      </React.Fragment>\n    );\n    if (\n      props.luceneText ||\n      props.lucenePicture ||\n      props.luceneLink ||\n      props.luceneFile\n    ) {\n      messageLucene = (\n        <React.Fragment>\n        \n          <Grid\n            container\n            spacing={1}\n            className={rootClasses}\n            onClick={props.showClickHandler}\n          >\n            <Grid item xs={2} style={{ marginRight: \"0px\" }}>\n              <div className={classes.avatar2} />\n            </Grid>\n            <Grid item xs={10}>\n            <SoundClass text={textToSpeechMessageLucene} />\n              <p\n                style={{\n                  textAlign: \"left\",\n                  fontWeight: \"500\",\n                  color: \"#424242\",\n                  fontSize: \"0.8em\",\n                  letterSpacing: \"0.0.8em\",\n                  marginBottom: \"5px\"\n                }}\n              >\n                Alex's response{\" \"}\n               \n              </p>\n              <Box\n                boxShadow={1}\n                style={{ border: \"1px solid rgba(0,0,0,0.03)\" }}\n                className={classes.text + \" \" + classes.textBot}\n              >\n                <p\n                  style={{\n                    fontSize: \"1.0em\",\n                    padding: \"0px\",\n                    marginTop: \"0px\",\n                    marginBottom: \"0px\",\n                    wordWrap: \"break-word\"\n                  }}\n                >\n                  {props.luceneText ? props.luceneText : null}\n                  {props.luceneLink ? (\n                    <a\n                      href={props.luceneLink}\n                      style={{ display: \"block\", wordBreak: \"break-word\" }}\n                    >\n                      {props.luceneLink}\n                    </a>\n                  ) : null}{\" \"}\n                </p>\n\n                {props.lucenenPicture ? (\n                  <img\n                    src={props.lucenePicture}\n                    width=\"100px\"\n                    height=\"100px\"\n                    alt=\"DFI visual\"\n                  />\n                ) : null}\n\n                {props.luceneFile ? (\n                  <React.Fragment>\n                    <p>Look at what we found from:{props.luceneFilename}</p>{\" \"}\n                    <p>{props.luceneFile}</p>\n                  </React.Fragment>\n                ) : null}\n              </Box>\n            </Grid>\n          </Grid>\n        </React.Fragment>\n      );\n    }\n  } else {\n    message = (\n      <div className={rootClasses} onClick={props.showClickHandler}>\n        <Grid container spacing={1}>\n          <Grid item xs={12} />\n          <Grid item xs={12}>\n            <Box\n              boxShadow={1}\n              style={{ border: \"1px solid rgba(0,0,0,0.03)\",  float: \"right\",\n              backgroundColor: \"#26a69a\",\n              color: \"white\" }}\n              className={classes.textHuman + \" \" + classes.text}\n             \n            >\n              <p\n                style={{\n                  fontSize: \"1.0em\",\n                  padding: \"0px\",\n                  marginTop: \"0px\",\n                  marginBottom: \"0px\"\n                }}\n              >\n                {props.text}\n              </p>\n            </Box>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {message}\n      {messageWatson}\n      {messageLucene}\n    </React.Fragment>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Message from \"./Message/Message\";\nimport media from \"./ChatbotBody.module.css\";\n\n\n/**\n * Component representing the body of the chatbot\n */\nconst ChatbotBody = props => {\n  // Build appropriate message component based off of whether message\n  // is bot or user and if bot lucene or watson\n  let messages = props.messages.map((item, index) => {\n    if (item.type === \"bot\") {\n      // If the index is the same as question or answer we doon't change the opacity\n      if (\n        index === props.showing[\"question\"] ||\n        index === props.showing[\"answer\"]\n      ) {\n        return (\n          <Message\n            showClickHandler={() => props.showClickHandler(item.type, index)}\n            key={index}\n            showing={true}\n            type={item.type}\n            id=\"bottom\"\n            watsonText={item.watson.message}\n            watsonPicture={item.watson.picture}\n            watsonLink={item.watson.link}\n            watsonFilename={item.watson.filename}\n            watsonFile={item.watson.file}\n            luceneText={item.lucene.message}\n            luceneFile={item.lucene.file}\n            luceneFilename={item.lucene.filename}\n            lucenePicture={item.lucene.picture}\n            luceneLink={item.lucene.link}\n          />\n        );\n      } else {\n        return (\n          <Message\n            showClickHandler={() => props.showClickHandler(item.type, index)}\n            key={index}\n            showing={false}\n            type={item.type}\n            id=\"bottom\"\n            watsonText={item.watson.message}\n            watsonPicture={item.watson.picture}\n            watsonLink={item.watson.link}\n            watsonFilename={item.watson.filename}\n            watsonFile={item.watson.file}\n            luceneText={item.lucene.message}\n            luceneFile={item.lucene.file}\n            luceneFilename={item.lucene.filename}\n            lucenePicture={item.lucene.picture}\n            luceneLink={item.lucene.link}\n          />\n        );\n      }\n    } else {\n      if (\n        index === props.showing[\"question\"] ||\n        index === props.showing[\"answer\"]\n      ) {\n        return (\n          <Message\n            showClickHandler={() => props.showClickHandler(item.type, index)}\n            key={index}\n            showing={true}\n            type={item.type}\n            id=\"bottom\"\n            text={item.message}\n            picture={item.picture}\n            link={item.link}\n          />\n        );\n      } else {\n        return (\n          <Message\n            showClickHandler={() => props.showClickHandler(item.type, index)}\n            key={index}\n            showing={false}\n            type={item.type}\n            id=\"bottom\"\n            text={item.message}\n            picture={item.picture}\n            link={item.link}\n            file={item.file}\n          />\n        );\n      }\n    }\n  });\n  // Div with id at bottom is used as a dummy div to ensure that we\n  // can keep the chat at the bottom\n  return (\n    <div>\n      <Paper className={media.root} id=\"out\">\n        {messages}\n        <div id=\"bottom\" style={{ float: \"left\", clear: \"both\" }} />\n      </Paper>\n    </div>\n  );\n};\n\nexport default ChatbotBody;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Paper from \"@material-ui/core/Paper\";\nimport media from \"./MessageInput.module.css\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  textField: {\n    padding: \"5px\",\n    marginBottom: \"5px\",\n    marginTop: \"0px\",\n    marginLeft: \"10px\"\n  },\n  icon: {\n    marginTop: \"15px\",\n    marginLeft: \"5px\",\n    \"&:hover\": {\n      backgroundColor: \"rgb(38, 166, 154)\",\n      transition: \"0.5s ease-in\"\n    }\n  }\n}));\n\n/**\n * Component representing message input\n * @param {props:function} addMessageHandler - function for adding messages\n */\nconst MessageInput = props => {\n  const classes = useStyles();\n  return (\n    <div className={media.root}>\n      <form onSubmit={props.addMessageHandler} autoComplete=\"off\">\n        <Paper\n          style={{ borderTopRightRadius: \"0px\", borderTopLeftRadius: \"0px\" }}\n        >\n          <Grid container spacing={0}>\n            <Grid item xs={10}>\n              <TextField\n                id=\"standard-name\"\n                name=\"userMessage\"\n                className={classes.textField}\n                autoComplete=\"off\"\n                style={{ width: \"95%\" }}\n                placeholder=\"Send a message!\"\n              />\n            </Grid>\n            <Grid item xs={2}>\n              <Fab\n                color=\"primary\"\n                aria-label=\"Send\"\n                size=\"small\"\n                className={classes.icon}\n                type=\"submit\"\n              >\n                <SendIcon />\n              </Fab>\n            </Grid>\n          </Grid>\n        </Paper>\n      </form>\n    </div>\n  );\n};\n\nexport default MessageInput;","import React from \"react\";\nimport ChatbotHeader from \"./ChatbotHeader/ChatbotHeader\";\nimport Container from \"@material-ui/core/Container\";\nimport ChatbotBody from \"./ChatbotBody/ChatbotBody\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MessageInput from \"./MessageInput/MessageInput\";\nimport Chat from \"@material-ui/icons/Chat\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grow from \"@material-ui/core/Grow\";\nimport axios from \"axios\";\nimport shadow from \"./Chatbot.module.css\";\nimport media from \"./Chatbot.module.css\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"no-wrap\",\n    padding: \"0px\"\n  },\n\n  bottomRightPosition: {\n    position: \"fixed\",\n    bottom: \"3vh\",\n    right: \"1vw\"\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 4),\n    outline: \"none\"\n  }\n}));\n\n// bot has the following props:\n//  1) text\n//  2) link\n//  3) picture\n\n// User has the following props:\n// 1) text\n\n/**\n * Component representing DFI's chatbot\n */\nconst Chatbot = () => {\n  const classes = useStyles();\n\n  /**\n   * State holds information on messages sent by user and chatbot,\n   * @param {bool} showChatbot - boolean that will show the chatbot if true otherwise false\n   * @param {dict} showing -contains keys for question and answer which represent an index for the visible question and answer\n   */\n  const [values, setValues] = React.useState({\n    messages: [\n      {\n        type: \"bot\",\n        watson: {\n          message:\n            \"Hello and welcome to DFI!  The future Chatbot, click a message to highlight it\"\n        },\n        lucene: {}\n      }\n    ],\n    showChatbot: true,\n    showing: { question: 0, answer: 0 }\n  });\n\n  React.useEffect(() => {\n    console.log(\"refreshed\");\n  });\n\n  /**\n   *  Function controls which message is visible.  If a user message is clicked that messages index and that\n   * index + 1 becomes the question answer pair in showing.  If a bot message is clicked then that index and that index -1 becomes\n   * the answer question pair\n   * @param {string} type- type of message clicked (bot or user)\n   * @param {int} index - index of the message being clicked in the functional state\n   *                        messages array\n   */\n  const showClickHandler = (type, index) => {\n    // Need length of messages array to check for out of bounds cases\n    const length = values.messages.length;\n    \n    if (type === \"bot\") {\n      // Make sure that this doesn't apply to greeting message which has index 0\n      if (index !== 0) {\n        setValues({\n          ...values,\n          showing: { question: index, answer: index - 1 }\n        });\n      }\n    } else {\n      // Make sure there is an answer to follow up with\n      if (index + 1 < length) {\n        setValues({\n          ...values,\n          showing: { question: index + 1, answer: index }\n        });\n      }\n    }\n  };\n\n  /**\n   * Converts a users question into  GET url\n   * @param {string} message\n   */\n  const convertToGet = message => {\n    const messageArray = message.split(\" \");\n    const length = messageArray.length;\n    let getMessage = \"\";\n    messageArray.forEach(function(item, index) {\n      if (index === length - 1) {\n        getMessage += item;\n      } else {\n        getMessage += item + \"+\";\n      }\n    });\n    return getMessage;\n  };\n\n  /**\n   * Retreives what watson returns in the text portion of its JSON\n   * @response\n   */\n  const getWatsonMessage = response => {\n    let message = \"\";\n    if (response[\"data\"][\"watson\"][\"text\"]) {\n      message = response[\"data\"][\"watson\"][\"text\"];\n    }\n    return message;\n  };\n\n  /**\n   * Retreives what Lucene returns in the text portion of its JSON\n   * @response\n   */\n  const getLuceneMessage = response => {\n    let message = \"\";\n    if (response[\"data\"][\"lucene\"][\"text\"]) {\n      message = response[\"data\"][\"lucene\"][\"text\"];\n    }\n    return message;\n  };\n\n  /**\n   * Retreives what Lucene returns in the file passage portion of its JSON\n   * @response\n   */\n  const getLuceneFilePassage = response => {\n    let file = \"\";\n    if (response[\"data\"][\"lucene\"][\"file\"]) {\n      file = response[\"data\"][\"lucene\"][\"file\"][\"passage\"];\n    }\n    return file;\n  };\n\n  /**\n   * Retreives what Lucene returns in the file passage portion of its JSON\n   * @response\n   */\n  const getLuceneFilename = response => {\n    let filename = \"\";\n    if (response[\"data\"][\"lucene\"][\"file\"]) {\n      filename = response[\"data\"][\"lucene\"][\"file\"][\"filename\"];\n    }\n    return filename;\n  };\n\n  /**\n   * Retreives what Watson returns in the file passage portion of its JSON\n   * @response\n   */\n  const getWatsonFileName = response => {\n    let filename = \"\";\n    if (response[\"data\"][\"watson\"][\"file\"]) {\n      filename = response[\"data\"][\"watson\"][\"file\"][\"filename\"];\n    }\n    return filename;\n  };\n  /**\n   * Retreives what Watson returns in the file passage portion of its JSON\n   * @response\n   */\n  const getWatsonFilePassage = response => {\n    let file = \"\";\n    if (response[\"data\"][\"watson\"][\"file\"]) {\n      file = response[\"data\"][\"watson\"][\"file\"][\"passage\"];\n    }\n    return file;\n  };\n\n  /**\n   * Retreives what Watson returns in the image portion of its JSON\n   * @response\n   */\n  const getWatsonImage = response => {\n    let image = null;\n\n    if (response[\"data\"][\"watson\"][\"image\"]) {\n      image = response[\"data\"][\"watson\"][\"image\"].replace(/['\"]+/g, \"\");\n    }\n\n    return image;\n  };\n\n  /**\n   * Retreives what Lucene returns in the image portion of its JSON\n   * @response\n   */\n  const getLuceneImage = response => {\n    let image = null;\n    if (response[\"data\"][\"lucene\"][\"image\"]) {\n      image = response[\"data\"][\"lucene\"][\"image\"].replace(/['\"]+/g, \"\");\n    }\n    return image;\n  };\n\n  /**\n   * Retreives what Watson returns in the url portion of its JSON\n   * @response\n   */\n  const getWatsonLink = response => {\n    let link = null;\n    if (response[\"data\"][\"watson\"][\"url\"]) {\n      link = response[\"data\"][\"watson\"][\"url\"];\n    }\n\n    return link;\n  };\n\n  /**\n   * Retreives what Lucene returns in the url portion of its JSON\n   * @response\n   */\n  const getLuceneLink = response => {\n    let link = null;\n\n    if (response[\"data\"][\"lucene\"][\"url\"]) {\n      link = response[\"data\"][\"lucene\"][\"url\"];\n    }\n    return link;\n  };\n\n  /**\n   * Builds a JSON with every Watson element in it to be used in the Message component\n   * @response\n   */\n  const getWatsonObject = response => {\n    let watsonObject = {};\n    watsonObject[\"picture\"] = getWatsonImage(response);\n    watsonObject[\"link\"] = getWatsonLink(response);\n    watsonObject[\"filename\"] = getWatsonFileName(response);\n    watsonObject[\"file\"] = getWatsonFilePassage(response);\n    watsonObject[\"type\"] = \"bot\";\n    watsonObject[\"message\"] = getWatsonMessage(response);\n    return watsonObject;\n  };\n  /**\n   * Builds a JSON with every Lucene element in it to be used in the Message component\n   * @response\n   */\n  const getLuceneObject = response => {\n    let luceneMessage = {};\n    luceneMessage[\"picture\"] = getLuceneImage(response);\n    luceneMessage[\"link\"] = getLuceneLink(response);\n    luceneMessage[\"filename\"] = getLuceneFilename(response);\n    luceneMessage[\"file\"] = getLuceneFilePassage(response);\n    luceneMessage[\"type\"] = \"bot\";\n    luceneMessage[\"message\"] = getLuceneMessage(response);\n    return luceneMessage;\n  };\n\n    /**\n   * Function scrolls to bottom when new messages are added\n   */\n  const scrollBottom = () => {\n    if (document.getElementById(\"bottom\")) {\n      document.getElementById(\"bottom\").scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  /**\n   *  Sends a get request to /userQuery with the users message\n   * and also adds their message to messages in the functional state\n   * @event\n   */\n  const addMessageHandler = event => {\n    event.preventDefault();\n    const target = event.target;\n    const userMessage = target.userMessage.value;\n    // reset the submit field\n    target.userMessage.value = \"\";\n    // Make sure users message is not empty\n    if (userMessage.length === 0 || /^\\s*$/.test(userMessage)) {\n    } else {\n      const newMessages = [\n        ...values.messages,\n        { type: \"user\", message: userMessage }\n      ];\n      setValues({ ...values, messages: newMessages });\n\n      const getMessage = convertToGet(userMessage);\n\n      axios\n        .get(\"/userquery?\" + getMessage)\n        .then(response => {\n          // build the botMessage response object\n\n          let botMessage = {};\n          botMessage[\"watson\"] = getWatsonObject(response);\n          botMessage[\"lucene\"] = getLuceneObject(response);\n          botMessage[\"type\"] = \"bot\";\n\n          const newMessagesBot = [...newMessages, botMessage];\n          // The current selected question should be the last two items in the messages array\n          const arrayLength = newMessagesBot.length;\n          setValues({\n            ...values,\n            showing: { question: arrayLength - 1, answer: arrayLength - 2 },\n            messages: newMessagesBot\n          });\n         scrollBottom();\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n    }\n    scrollBottom();\n  };\n\n  /**\n   * Function changes the function states showChatbot field\n   * to either true or false determining whether the chatbot\n   * is visible or not\n   */\n  const chatbotClickHandler = () => {\n    const newStatus = !values.showChatbot;\n    setValues({ ...values, showChatbot: newStatus });\n  };\n\n  let chatbot = null;\n  // if the showChatbot field is not false display the chatbot\n  // object otherwise display the icon\n  if (values.showChatbot) {\n    chatbot = (\n      <React.Fragment>\n        <Grow in={values.showChatbot}>\n          <Container\n            className={\n              media.bottomRightPosition +\n              \" \" +\n              classes.root +\n              \" \" +\n              shadow.Shadow +\n              \" \" +\n              media.Chatbot\n            }\n            \n          >\n            <ChatbotHeader\n              title=\"DFI Agent Alex\"\n              clickHandler={chatbotClickHandler}\n            />\n\n            <ChatbotBody\n              showClickHandler={showClickHandler}\n              messages={values.messages}\n              showing={values.showing}\n            />\n\n            <MessageInput addMessageHandler={addMessageHandler} />\n          </Container>\n        </Grow>\n      </React.Fragment>\n    );\n  } else {\n    chatbot = (\n      <Fab\n        edge=\"start\"\n        className={media.bottomRightPosition}\n        color=\"secondary\"\n        aria-label=\"Menu\"\n        onClick={chatbotClickHandler}\n      >\n        <Chat />\n      </Fab>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {chatbot}\n      <audio\n        src=\"\"\n        style={{ display: \"none\" }}\n        preload=\"none\"\n        controls=\"controls\"\n        type=\"audio/mp3\"\n        id=\"player\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Chatbot;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"./images/DFILogo.png\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    position: \"absolute\",\n    width: \"100%\",\n    overflowX:'hidden',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    marginRight: theme.spacing(5),\n    color:'white',\n    '&:hover': { color:'rgb(38, 166, 154)',transition:'0.5s ease-in'},\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: \"none\"\n  },\n  navbar: {\n    backgroundColor: \"rgba(0,0,0,0.0)\"\n  }\n}));\n/**\n *  Component for the navigation bar in the home page\n * @param {props} props:\n *  @param {bool} loggedin - bool represented whether the user is logged in or not\n *  @param {function} logOutHandler - function for logging the user out\n */\nconst Navbar2 = props => {\n  const classes = useStyles();\n  let navbarLinks = null;\n\n  if (props.loggedIn) {\n    navbarLinks = (\n      <React.Fragment>\n        <Link to=\"/admin\" >\n        <Typography variant=\"h6\" className={classes.title} >Admin Dashboard</Typography>\n        </Link>\n          <Button\n            onClick={props.logOutHandler}\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n          >\n            Logout\n          </Button>\n    \n      </React.Fragment>\n    );\n  } else {\n    navbarLinks = (\n      <Button\n        onClick={props.modalClickHandler}\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.button}\n      >\n        Admin Login\n      </Button>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.navbar} elevation={0}>\n        <Toolbar>\n          <Typography href=\"https://www.digitalfinanceinstitute.org/\" variant=\"h6\" className={classes.title}>\n          <img src={logo} alt=\"DFI Logo\" />\n          </Typography>\n\n          {navbarLinks}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\nexport default Navbar2;\n","import React from 'react';\r\nimport classes from './Login.module.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n/**\r\n *  Component for logging into our Chatbot service (only for admins)\r\n * @param {props} props:\r\n *  @param {bool} showModal - bool representing whether the login modal should be visible or hidden\r\n *  @param {function} loginHandler - function for authenticating the user in the backend and updating the state for loggedIn\r\n */\r\nconst login = (props) => {\r\n  let displayStyle = null;\r\n\r\n  // if the showModal prop is true then we show the modal by making display block\r\n  // otherwise the modal is not visible and the display becomes none\r\n\r\n  if (props.showModal === true) {\r\n    displayStyle = { display: 'block' };\r\n  }\r\n  else {\r\n    displayStyle = { display: 'none' };\r\n  }\r\n \r\n  return (\r\n    <div style={displayStyle} className={classes.background}>\r\n      <div className={classes.Modal}>\r\n        <Container>\r\n          <form onSubmit={props.loginHandler} autoComplete=\"off\" method=\"post\">\r\n\r\n            <h4>Sign in</h4>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  margin=\"normal\"\r\n                  style={{ width: '100%' }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  style={{ width: '100%' }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n              <button type=\"submit\" href=\"#!\" className=\"waves-effect waves-light btn modal-trigger\">Login</button>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n            <button className=\"waves-effect waves-light btn modal-trigger\" onClick={props.modalClickHandler}>Cancel</button>\r\n            </Grid>\r\n            </Grid>\r\n          \r\n          </form>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default login;","import React from 'react';\n\n/**\n * Component for the footer in Home, mostly filler content\n */\nconst footer = () =>{\n    return(\n        <React.Fragment>\n        <footer className=\"page-footer blue darken-3\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col l6 s12\">\n                <h5 className=\"white-text\">DFI Chat Bot</h5>\n                <p className=\"grey-text text-lighten-4\">Lorem Ipsum.</p>\n              </div>\n              <div className=\"col l4 offset-l2 s12\">\n                <h5 className=\"white-text\">Helpful Links</h5>\n                <ul>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Getting Started</a></li>\n                  <li><a className=\"grey-text text-lighten-3\" href=\"#!\">About Us</a></li>\n                  <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Terms of Service</a></li>\n                  <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Privacy Policy</a></li>\n                  \n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"footer-copyright\">\n            <div className=\"container\">\n            © 2019 CSC01\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">Lorem Ipsum</a>\n            </div>\n          </div>\n        </footer>\n        </React.Fragment>\n \n    );\n\n}\n\nexport default footer;\n","import React from \"react\";\nimport Hero from \"./Hero/Hero\";\nimport AboutUs from \"./AboutUs/AboutUs\";\nimport Features from \"./Features/Features\";\nimport Chatbot from \"../../containers/Chatbot/Chatbot\";\nimport Navbar from \"./Navbar/Navbar\";\nimport Login from \"./Login/Login\";\nimport Footer from \"./Footer/Footer\";\n/**\n *\n * @param {props} props:\n *  @param {bool} loggedin - bool represented whether the user is logged in or not\n *  @param {bool} showModal - bool representing whether the login modal should be visible or hidden\n *  @param {function} modalClickHandler - function for changing the state in App for showModal (controls whether the modal is visible or not)\n *  @param {function} loginHandler - function for authenticating the user in the backend and updating the state for loggedIn\n *  @param {function} logOutHandler - function for logging the user out\n */\nconst home = props => {\n  document.body.style = \"background: white\";\n\n  return (\n    <React.Fragment>\n      <Login\n        showModal={props.showModal}\n        loginHandler={props.loginHandler}\n        modalClickHandler={props.modalClickHandler}\n      />\n      <Navbar\n        loggedIn={props.loggedIn}\n        logOutHandler={props.logOutHandler}\n        modalClickHandler={props.modalClickHandler}\n      />\n      <Hero />\n      <div className=\"container\" style={{ width: \"80%\" }}>\n        <AboutUs />\n        <Features />\n      </div>\n\n      <Footer />\n      <Chatbot />\n    </React.Fragment>\n  );\n};\n\nexport default home;\n","import React from 'react';\n/**\n * Component representing a row in a table with an uploaded document and the abillity to remove it\n * @param {props} props:\n *  @param {string} name - name of a file\n *  @param {string} type - type of a file\n *  @param {string} date - date the file was added\n *  @param {function} removeFileHandler - function which removes a file from the database\n */\nconst documentRow = (props) =>{\n    return( \n    <React.Fragment>\n          <tr>\n            <td>{props.name}</td>\n            <td>{props.type}</td>\n            <td>{props.date}</td>\n            <td><button onClick={props.removeFileHandler} className=\"btn red\">Remove</button></td>\n          </tr>\n    </React.Fragment>\n    );\n};\n\nexport default documentRow;","import React from 'react';\nimport DocumentRow from './DocumentRow/DocumentRow';\n/**\n * Component representing a table of all the files in the  database\n * @param {props} props:\n *  @param {list} files - a list containing every file in Files.db\n *  @param {function} addFileHandler - function which adds a file to the database\n *  @param {function} removeFileHandler - function which removes a file from the database\n */\nconst documentsTable = (props) => {\n\n  return (\n    <React.Fragment>\n      <table className={\" striped\"}>\n        <thead className={\"z-depth-1\"}>\n          <tr>\n            <th>File Name</th>\n            <th>File Type</th>\n            <th>Last Updated</th>\n            <th>Remove</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.files.map((item, i) => {\n            const itemArray = item['filename'].split(\".\");\n            const name = itemArray[0];\n            const type = itemArray[1];\n            return <DocumentRow key={i} removeFileHandler={(fileName) => props.removeFileHandler(name+\".\"+type)} name={name} type={type} date={item['date']}/>\n          }\n\n          )}\n\n        </tbody>\n      </table>\n\n    </React.Fragment>\n  );\n}\n\nexport default documentsTable;","import React, { Component } from 'react'\n// Credit to https://medium.com/@650egor/simple-drag-and-drop-file-upload-in-react-2cb409d88929\n\n/**\n * Component represents drag and drop area for files\n */\nclass DragAndDrop extends Component {\n  // If a user is dragging on the drag and drop area then dragging will be set to true  \n  state = {\n        dragging: false,\n      }\n      \n  dropRef = React.createRef()\n  /*\n   * Prevents default behaviour\n   */\n  handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  /*\n  * Users dragging item onto screen sets dragin state to True\n  */\n  handleDragIn = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.dragCounter++  ;\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({dragging: true});\n    }\n   \n  }\n  /**\n   * users dragging off of screen sets dragging to false \n   * and restards drag counter\n   */\n  handleDragOut = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    this.dragCounter--;\n    if (this.dragCounter > 0) return\n    this.setState({dragging: false});\n  }\n  /**\n   * On drop transfer data\n   */\n  handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState({dragging: false});\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      this.props.handleDrop(e.dataTransfer.files);\n      e.dataTransfer.clearData();\n      this.dragCounter = 0;\n    }\n  }\n  /**\n   * set up drag events when component is created\n   */\n  componentDidMount() {\n    this.dragCounter = 0;\n    let div = this.dropRef.current;\n    div.addEventListener('dragenter', this.handleDragIn);\n    div.addEventListener('dragleave', this.handleDragOut);\n    div.addEventListener('dragover', this.handleDrag);\n    div.addEventListener('drop', this.handleDrop);\n  }\n  componentWillUnmount() {\n    let div = this.dropRef.current\n    div.removeEventListener('dragenter', this.handleDragIn);\n    div.removeEventListener('dragleave', this.handleDragOut);\n    div.removeEventListener('dragover', this.handleDrag);\n    div.removeEventListener('drop', this.handleDrop);\n  }\n  render() {\n    return (\n        <div\n        style={{display: 'inline-block', position: 'relative'}}\n        ref={this.dropRef}\n      >\n        {this.state.dragging &&\n          <div \n            style={{\n              border: 'dashed grey 4px',\n              backgroundColor: 'rgba(255,255,255,.8)',\n              position: 'absolute',\n              top: 0,\n              bottom: 0,\n              left: 0, \n              right: 0,\n              zIndex: 9999\n            }}\n          >\n            <div \n              style={{\n                \n                top: '50%',\n                right: 0,\n                left: 0,\n                textAlign: 'center',\n                color: 'grey',\n                fontSize: 36\n              }}\n            >\n              <div>drop here</div>\n            </div>\n          </div>\n        }\n        <ul>\n\n       \n        {this.props.children}\n        </ul>\n      </div>\n    )\n  }\n}\nexport default DragAndDrop","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"./images/DFILogo.png\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n    flexGrow: 1,\n\n    color: \"white\",\n    \"&:hover\": { color: \"rgb(38, 166, 154)\", transition: \"0.5s ease-in\" }\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n/**\n *  Component for the navigation bar in the home page\n * @param {props} props:\n *  @param {bool} loggedin - bool represented whether the user is logged in or not\n *  @param {function} logOutHandler - function for logging the user out\n */\nconst Navbar = props => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography href=\"https://www.digitalfinanceinstitute.org/\"variant=\"h6\" className={classes.title}>\n           \n              <img src={logo} alt=\"DFI Logo\" />{\" \"}\n      \n          </Typography>\n\n          <Typography variant=\"h6\" align=\"left\" style={{marginRight:'20px'}}>\n            <Link className={classes.title} to=\"/\">\n              {\" \"}\n              Home{\" \"}\n            </Link>\n            <Link className={classes.title} to=\"/admin/crawler\">\n              {\" \"}\n              Crawler{\" \"}\n            </Link>\n            <Link className={classes.title} to=\"/admin\">\n              Document Management{\" \"}\n            </Link>\n            <Link className={classes.title} to=\"/admin/feedback\">\n              {\" \"}\n              Chatbot Ratings\n            </Link>\n            <Link className={classes.title} to=\"/admin/reset\">\n              {\" \"}\n              Data Reset\n            </Link>\n          </Typography>\n          <Button\n            onClick={props.logOutHandler}\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.menuButton}\n          >\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport Chart from \"react-google-charts\";\n\n\nconst PieChart = props => {\n\n  /**\n   * State for PieChart, only contains a title used for the pie chart and \n   * the plot points for the pie chart\n   */\n  const [data, setData] = useState({\n    data: props.initialPoints,\n    title:\"Frequencies of each query\",\n  });\n\n  /**\n   * Once the component is being rendered we need to populate the graph\n   * with something, initial points is used to pre-populate the data\n   */\n useEffect(()=>{\n  setData({title:\"Frequencies of each query\", data:props.initialPoints});\n },[props.initialPoints]);\n\nconst pieOptions = {\n  title: data.title,\n  sliceVisibilityThreshold: 0.08, // 20%,\n  pieHole: 0.6,\n  legend: {\n    position: \"bottom\",\n    alignment: \"center\",\n    textStyle: {\n      color: \"233238\",\n      fontSize: 14\n    }\n  },\n  tooltip: {\n    showColorCode: true\n  },\n  chartArea: {\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"80%\"\n  },\n  fontName: \"Roboto\"\n};\n    return (\n      <div className=\"App\">\n        <Chart\n  width={'800px'}\n  height={'400px'}\n  chartType=\"PieChart\"\n  loader={<div>Loading Chart</div>}\n  data={data.data}\n  options={pieOptions}\n  rootProps={{ 'data-testid': '7' }}\n  legend_toggle\n/>\n      </div>\n    );\n}\n\nexport default PieChart;\n","import React, { useEffect } from \"react\";\nimport DocumentTable from \"./DocumentsTable/DocumentsTable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport DragAndDrop from \"./DragAndDrop/DragAndDrop\";\nimport axios from \"axios\";\nimport qs from 'qs';\nimport Navbar from '../Navbar/Navbar';\nimport PieChart from './PieChart/PieChart'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  dragAndDrop: {\n    width: \"100%\",\n    height: \"300px\",\n    backgroundColor: \"rgba(0,0,0,0.1)\",\n    border: \"1px solid #ccc\",\n    padding: theme.spacing(2),\n    borderRadius: \"5px\"\n  }\n}));\n\n/**\n * Compoenent representing all the documents the admin has uploaded\n * and has the abillity for admins to uplaod or remove documents\n * @param {props} props:\n *  @param {list} files - a list containing every file in Files.db\n *  @param {function} addFileHandler - function which adds a file to the database\n *  @param {function} removeFileHandler - function which removes a file from the database\n */\nconst AdminDocuments = props => {\n  // when component is first loaded we should load all the files in the database\n  useEffect(() => {\n    props.viewAllFilesHandler();\n    props.viewGraphHandler();\n  }, []);\n  const classes = useStyles();\n\n  const [values, setFiles] = React.useState({\n    files: []\n  });\n  const handleDrop = files => {\n    let fileList = values.files;\n    for (var i = 0; i < files.length; i++) {\n      if (!files[i].name) {\n        return;\n      } else {\n        fileList.push(files[i]);\n      }\n    }\n    setFiles({ files: fileList });\n  };\n\n  /**\n   * Makes a request to the backend through a post request which\n   * adds a file to Files.db\n   * @event\n   */\n  const addAllFilesHandler = async listFiles => {\n    for (let i = 0; i < listFiles.length; i++) {\n      addFileHandler(listFiles[i]);\n    }\n    // empty fiels lsit\n    setFiles({ files: [] });\n    props.viewAllFilesHandler();\n  };\n\n  /**\n   * Makes a request to the backend through a post request which\n   * adds a file to Files.db\n   * @event\n   */\n  const addFileHandler = async file => {\n    // Get the data from event and add it to a form\n\n    let data = new FormData();\n    data.append(\"action\", \"upload\");\n    data.append(\"file\", file);\n\n    await axios\n      .post(\"/handlefiles\", data)\n      .then(response => {\n        // viewAllFilesHandler needs to be called to update the file list being displayed\n       \n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n      props.viewAllFilesHandler();\n  };\n\n  /**\n   * function downloads an export of all data uploaded to Watson\n   */\n  const getCsvOfData = async ()=>{\n    let data = new FormData();\n    data.append(\"getQueries\", \"please\");\n\n        // Create JSON object\n        const data2 = {\n          \"getQueries\": \"please\",\n          \n        }\n\n    await axios\n      .post(\"/getdata\", qs.stringify(data2))\n      .then(response => {\n        // viewAllFilesHandler needs to be called to update the file list being displayed\n        console.log(response);\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'documents.csv'); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  // makes background a bit darker so it's easier on the eyes\n  document.body.style = \"background: rgba(0,0,0,0.05);\";\nconsole.log(props);\n  let admin = null;\n  if(props.loggedIn === true){\n    admin = (<React.Fragment>\n      <Navbar logOutHandler={props.logOutHandler}/>\n      <Box marginTop={3}>\n        <Container maxWidth=\"md\">\n          <Paper className={classes.root}>\n            <Typography variant=\"h4\" component=\"h4\" align=\"left\">\n              File Upload\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\" align=\"left\">\n              Drag and drop or select a file to train the chatbot\n            </Typography>\n            <Box\n              className={classes.dragAndDrop}\n              color=\"secondary\"\n              marginTop={3}\n              align=\"center\"\n            >\n              <DragAndDrop handleDrop={handleDrop}>\n                <div style={{ height: \"250px\", width: \"800px\" }}>\n                  {values.files.map((file, i) => (\n                    <div key={i}>\n                      <li>{file.name}</li>\n                    </div>\n                  ))}\n                </div>\n              </DragAndDrop>\n            </Box>\n            <Button\n              onClick={() => addAllFilesHandler(values.files)}\n              type=\"submit\"\n              color=\"secondary\"\n              variant=\"contained\"\n              style={{\n                display: \"block\",\n                marginTop: \"20px\",\n                position: \"relative\",\n                marginLeft: \"auto\"\n              }}\n            >\n              upload files\n            </Button>\n          </Paper>\n        </Container>\n      </Box>\n\n      <Box marginTop={3} marginBottom={3}>\n        <Container maxWidth=\"md\">\n          <Paper className={classes.root}>\n            <Typography variant=\"h4\" component=\"h4\" align=\"left\">\n              What's In The Chatbot's Brain?\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              component=\"p\"\n              align=\"left\"\n              style={{ margin: \"10px\" }}\n            >\n              Take a look at what DFI's chatbot is thinking about\n            </Typography>\n            <DocumentTable\n              removeFileHandler={props.removeFileHandler}\n              files={props.files}\n            />\n          </Paper>\n        </Container>\n      </Box>\n            <Box marginTop={3} marginBottom={3}>\n              <Container maxWidth=\"md\">\n                <Paper className={classes.root}>\n                  <Typography variant=\"h4\" component=\"h4\" align=\"left\">\n                    What Did Users Bomb The Chatbot With?\n                  </Typography>\n                    <Button\n                      onClick={getCsvOfData}\n                      type=\"submit\"\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      style={{\n                        display: \"block\",\n                        marginTop: \"20px\",\n                        position: \"relative\",\n                        marginLeft: \"auto\",\n                        marginBottom:'20px',\n                      }}\n                    >\n                      export to csv\n                    </Button>\n                   <PieChart\n                     vTitle=\"vTitle\"\n                     hTitle=\"hTitle\"\n                     initialPoints={props.queries}\n                   />\n                </Paper>\n              </Container>\n            </Box>\n    </React.Fragment>)\n  }\n  else{\n    admin = <h2>Not Logged In</h2>\n  }\n  return (\n    \n    <React.Fragment>\n    {admin}\n    </React.Fragment>\n  );\n};\n\nexport default AdminDocuments;\n","import React from 'react';\n/**\n * Compoenent representing a row in a table with feedback\n * @param {props} props:\n *  @param {string} comments -comments made by user\n *  @param {int} rating - rating of chatbot\n */\nconst feedbackRow = (props) =>{\n    return( \n\n          <tr>\n            <td>{props.comments}</td>\n            <td>{props.rating}</td>\n          </tr>\n\n    );\n};\n\nexport default feedbackRow;","import React from 'react';\nimport classes from './FeedbackTable.module.css';\nimport FeedbackRow from './FeedbackRow/FeedbackRow';\n/**\n * Compoenent representing a table of all the files in the  database\n * @param {props} props:\n *  @param {list} feedback - a list containing every file in Chatbot.db\n */\nconst feedbackTable = (props) => {\n\n  return (\n    <React.Fragment>\n \n      <table className={classes.ScrollableTable + \" striped\"}>\n        <thead className={\"z-depth-1\"}>\n          <tr>\n            <th>Comments</th>\n            <th>Rating</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.feedback.map((item, i) => {\n            const comments= item['comments'];\n            const rating = item['rating'];\n            return <FeedbackRow key={i}  comments={comments} rating={rating}/>\n          }\n\n          )}\n\n        </tbody>\n      </table>\n   \n    </React.Fragment>\n  );\n}\n\nexport default feedbackTable;","import React from 'react';\n/**\n * Component representing a row in a table with an uploaded document and the abillity to remove it\n * @param {props} props:\n *  @param {int} good - number of good votes\n *  @param {int} bad - number of bad votes\n */\nconst ratingRow = (props) =>{\n    return( \n          <tr>\n            <td>{props.message}</td>\n            <td>{props.good}</td>\n            <td>{props.bad}</td>\n          </tr>\n    );\n};\n\nexport default ratingRow;","import React from 'react';\nimport classes from './RatingTable.module.css';\nimport RatingRow from './RatingRow/RatingRow';\n/**\n * Component representing a table of all the feed in the  database\n * @param {props} props:\n *  @param {list} feedback - a list containing each feedback row in Chatbot.db\n */\nconst ratingTable = (props) => {\n\n  return (\n    <React.Fragment>\n \n      <table className={classes.ScrollableTable + \" striped\"}>\n        <thead className={\"z-depth-1\"}>\n          <tr>\n            <th>Answer</th>\n            <th>Good Rating</th>\n            <th>Bad Rating</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.answerRating.map((item, i) => {\n            const message= item['answer'];\n            const good = item['good'];\n            const bad = item['bad'];\n            return <RatingRow key={i}  message={message} good={good} bad={bad}/>\n          }\n\n          )}\n\n        </tbody>\n      </table>\n  \n    </React.Fragment>\n  );\n}\n\nexport default ratingTable;","import React, { useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport Navbar from \"../Navbar/Navbar\";\nimport FeedbackTable from './FeedbackTable/FeedbackTable';\nimport RatingTable from './RatingTable/RatingTable';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  dragAndDrop: {\n    width: \"100%\",\n    height: \"300px\",\n    backgroundColor: \"rgba(0,0,0,0.1)\",\n    border: \"1px solid #ccc\",\n    padding: theme.spacing(2),\n    borderRadius: \"5px\"\n  }\n}));\n\n/**\n * Component representing a visual on all the feedback a user has uploaded\n * @param {props} props:\n *  @param {list} feedback - a list containing every file in Files.db\n */\nconst AdminFeedback = props => {\n  // when component is first loaded we should load all the files in the database\n  useEffect(() => {\n    viewAllFeedback();\n    viewAllAnswerRating();\n  }, []);\n  const classes = useStyles();\n  /*\n  const [allFeedback, setFeedback] = React.useState({\n    feedback: []\n  });\n  */\n  const [feedback, setFeedback] = React.useState([]);\n  const [answerRating, setAnswerRating] = React.useState([]);\n  const [average, setAverage] = React.useState([]);\n\n\n  const viewAllFeedback = async () =>{\n      console.log('hello');\n    await axios\n      .get(\"/feedback\")\n      .then(response => {\n          console.log(response)\n        //let listSites = []\n        //for(var key in response['date']){\n         //   listSites.push(response['data'][key])\n        //}\n        setFeedback(response['data']['feedback']);\n        setAverage(response['data']['average']);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  const viewAllAnswerRating = async () =>{\n      console.log('hello');\n    await axios\n      .get(\"/answerrating\")\n      .then(response => {\n          console.log(response)\n        //let listSites = []\n        //for(var key in response['date']){\n         //   listSites.push(response['data'][key])\n        //}\n        setAnswerRating(response['data']);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  const getCsvOfFeedback = async () => {\n    // Create JSON object\n    const data = {\n      getFeedback: \"please\"\n    };\n\n    await axios\n      .post(\"/getdata\", qs.stringify(data))\n      .then(response => {\n\n        console.log(response);\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"feedback.csv\"); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n\n  const getCsvOfRating = async () => {\n    // Create JSON object\n    const data = {\n      getAnswerRating: \"please\"\n    };\n\n    await axios\n      .post(\"/getdata\", qs.stringify(data))\n      .then(response => {\n\n        console.log(response);\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"answerRating.csv\"); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  document.body.style = \"background: rgba(0,0,0,0.05);\";\n  let admin = null;\n  if (props.loggedIn) {\n    admin = (\n      <React.Fragment>\n        <Navbar logOutHandler={props.logOutHandler} />\n\n        <Box marginTop={3} marginBottom={3}>\n          <Container maxWidth=\"md\">\n            <Paper className={classes.root}>\n              <Typography variant=\"h4\" component=\"h4\" align=\"left\">\n                Current Average Rating: {average}\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                component=\"p\"\n                align=\"left\"\n                style={{ margin: \"10px\" }}\n              >\n                Take a look at what people are saying about DFI's Chatbot!\n              </Typography>\n              <Button\n                onClick={getCsvOfFeedback}\n                type=\"submit\"\n                color=\"secondary\"\n                variant=\"contained\"\n                style={{\n                  display: \"block\",\n                  marginTop: \"20px\",\n                  position: \"relative\",\n                  marginLeft: \"auto\",\n                  marginBottom: \"20px\"\n                }}\n              >\n                export feedback to csv\n              </Button>\n                <FeedbackTable\n                  feedback={feedback}\n                />\n            </Paper>\n          </Container>\n        </Box>\n            <Box marginTop={3} marginBottom={3}>\n              <Container maxWidth=\"md\">\n                <Paper className={classes.root}>\n                  <Typography variant=\"h4\" component=\"h4\" align=\"left\">\n                    How Is The Chatbot Performing?\n                  </Typography>\n                  <Typography\n                    variant=\"body1\"\n                    component=\"p\"\n                    align=\"left\"\n                    style={{ margin: \"10px\" }}\n                  >\n                    Take a look at what people are picky about Chatbot's answers!\n                  </Typography>\n                  <Button\n                    onClick={getCsvOfRating}\n                    type=\"submit\"\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    style={{\n                      display: \"block\",\n                      marginTop: \"20px\",\n                      position: \"relative\",\n                      marginLeft: \"auto\",\n                      marginBottom: \"20px\"\n                    }}\n                  >\n                    export rating to csv\n                  </Button>\n                    <RatingTable\n                      answerRating={answerRating}\n                    />\n                </Paper>\n              </Container>\n            </Box>\n      </React.Fragment>\n    );\n  } else {\n    admin = <h2>Not Logged in</h2>;\n  }\n  return <React.Fragment>{admin}</React.Fragment>;\n};\n\nexport default AdminFeedback;\n","import React from 'react';\n/**\n * Component representing a row in a table with the name of the crawled site, the date\n * it was crawled on and the abillity to remove it\n * @param {props} props:\n *  @param {string} name - name of crawled site\n *  @param {string} date - date the site was crawled on\n *  @param {function} removeSiteHandler - function which removes a site from the Chatbot.db crawled sites schema\n */\nconst crawlerRow = (props) =>{\n    return( \n\n          <tr>\n            <td>{props.name}</td>\n            <td>{props.date}</td>\n            <td><button onClick={props.removeSiteHandler} className=\"btn red\">Remove</button></td>\n          </tr>\n\n    );\n};\n\nexport default crawlerRow;","import React from 'react';\nimport CrawlerRow from './CrawlerRow/CrawlerRow';\n/**\n * Compoenent representing a table of all the files in the  database\n * @param {props} props:\n *  @param {list} site - a list containing every crawled site in Chatbot.db\n *  @param {function} removeSiteHandler - function which removes a crawled site from Chatbot.db\n */\nconst crawlerTable = (props) => {\n\n  return (\n    <React.Fragment>\n      <table className={\" striped\"}>\n        <thead className={\"z-depth-1\"}>\n          <tr>\n            <th>Name</th>\n            <th>Date</th>\n            <th>Remove</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.sites.map((item, i) => {\n            return <CrawlerRow key={i} removeSiteHandler={(url) => props.removeSiteHandler(item['seed'])} name={item['seed']} date={item['date']}/>\n          }\n\n          )}\n\n        </tbody>\n      </table>\n\n    </React.Fragment>\n  );\n}\n\nexport default crawlerTable;","import React, { useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport Navbar from \"../Navbar/Navbar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CrawlerTable from './CrawlerTable/CrawlerTable';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  }\n}));\n\n/**\n * Component representing all the documents the admin has uploaded\n * and has the abillity for admins to uplaod or remove documents\n * @param {props} props:\n *  @param {list} feedback - a list containing every file in Files.db\n *  @param {function} addFileHandler - function which adds a file to the database\n *  @param {function} removeFileHandler - function which removes a file from the database\n */\nconst AdminCrawler = props => {\n  // when component is first loaded we should load all the files in the database\n\n  const classes = useStyles();\n\n  const [crawledStatus, setCrawledStatus] = React.useState(\"\");\n  const [sites, setSites] = React.useState([]);\n\n  const crawl = async event => {\n    // Create JSON object\n    let url = event.target.url.value;\n    let depth = event.target.depth.value;\n\n    // initialize variables with a default value if the user inputed nothing for some reason\n    if (url === null) {\n      url = \"\";\n    }\n\n    if (event.target.depth.value === null) {\n      depth = 0;\n    }\n\n    event.preventDefault();\n    const data = {\n      action: \"crawl\",\n      url: url,\n      depth: depth\n    };\n\n    await axios\n      .post(\"/webcrawler\", qs.stringify(data))\n      .then(response => {\n        setCrawledStatus(\"Successfully crawled \" + url);\n        getCrawledSites();\n      })\n      .catch(function(error) {\n        setCrawledStatus(\"An error has occured for \" + url);\n        console.log(error);\n      });\n  };\n\n  /**\n   * Function retrieves all the crawled sites from the database\n   */\n  const getCrawledSites = async () =>{\n     \n    await axios\n      .get(\"/webcrawler\")\n      .then(response => {\n          console.log(response)\n        //let listSites = []\n        //for(var key in response['date']){\n         //   listSites.push(response['data'][key])\n        //}\n        setSites(response['data']);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n  /**\n   * Function removes a site from the list of crawled sites in the database\n   * thus removing its data from being displayed back to the user\n   * @param {string} url- a site url that is to be removed from the database\n   */\n  const removeSiteHandler = async url => {\n    const data = {\n      action: \"remove\",\n      url: url\n    };\n    await axios\n      .post(\"/webcrawler\", qs.stringify(data))\n      .then(response => {\n      console.log(response)\n        getCrawledSites();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n  // When component is loaded crawled sites should be displayed\n  useEffect(() => {\n    getCrawledSites();\n  }, []);\n  // Admin dashboard background color should be a bit darker for stylistic reasons\n  document.body.style = \"background: rgba(0,0,0,0.05);\";\n  let admin = null;\n  if (props.loggedIn) {\n    admin = (\n      <React.Fragment>\n        <Navbar logOutHandler={props.logOutHandler} />\n\n        <Box marginTop={3} marginBottom={3}>\n          <Container maxWidth=\"md\">\n            <Paper className={classes.root}>\n              <Typography variant=\"h4\" component=\"h4\" align=\"left\">\n                Crawl Websites To Help The Chatbot Learn\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                component=\"p\"\n                align=\"left\"\n                style={{ margin: \"10px\" }}\n              >\n                Input a URL and the Number of pages and let our web crawler deal\n                with the rest.\n              </Typography>\n              <form onSubmit={crawl}>\n                <Grid container spacing={0}>\n                  <Grid item xs={12}>\n                    <TextField\n                      id=\"standard-name\"\n                      name=\"url\"\n                      label=\"URL\"\n                      margin=\"normal\"\n                      style={{ width: \"50%\" }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      id=\"standard-uncontrolled\"\n                      name=\"depth\"\n                      label=\"Depth\"\n                      margin=\"normal\"\n                      style={{ width: \"50%\" }}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Button\n                  type=\"submit\"\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  style={{\n                    display: \"block\",\n                    marginTop: \"20px\",\n                    position: \"relative\",\n                    marginLeft: \"auto\",\n                    marginBottom: \"20px\"\n                  }}\n                >\n                  Crawl Website\n                </Button>\n              </form>\n              <Typography>{crawledStatus}</Typography>\n            </Paper>\n          </Container>\n        </Box>\n\n\n        \n      <Box marginTop={3} marginBottom={3}>\n        <Container maxWidth=\"md\">\n          <Paper className={classes.root}>\n            <Typography variant=\"h4\" component=\"h4\" align=\"left\">\n              What's In The Chatbot's Brain?\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              component=\"p\"\n              align=\"left\"\n              style={{ margin: \"10px\" }}\n            >\n              Take a look at what websites the chatbot is thinking about\n            </Typography>\n          \n\n            <CrawlerTable\n              sites={sites}\n              removeSiteHandler={removeSiteHandler}\n            />\n          </Paper>\n        </Container>\n      </Box>\n      </React.Fragment>\n    );\n  } else {\n    admin = <h2>Not Logged in</h2>;\n  }\n  return <React.Fragment>{admin}</React.Fragment>;\n};\n\nexport default AdminCrawler;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport Navbar from \"../Navbar/Navbar\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  dragAndDrop: {\n    width: \"100%\",\n    height: \"300px\",\n    backgroundColor: \"rgba(0,0,0,0.1)\",\n    border: \"1px solid #ccc\",\n    padding: theme.spacing(2),\n    borderRadius: \"5px\"\n  }\n}));\n\n/**\n * Compoenent representing all the documents the admin has uploaded\n * and has the abillity for admins to uplaod or remove documents\n * @param {props} props:\n *  @param {list} feedback - a list containing every file in Chatbot.db\n *  @param {function} reindexData - function which re-indexes lucene data\n *  @param {function} resetData - function which removes resets all data in lucene\n */\nconst AdminFeedback = props => {\n    const classes = useStyles();\n   const [reset, setReset] = React.useState(\"\");\n   const [reindex, setReindex] = React.useState(\"\");\n\n  const resetData = async () => {\n    // Create JSON object\n    const data = {\n      reset: \"oh no!\"\n    };\n\n    await axios\n      .post(\"/index\", qs.stringify(data))\n      .then(response => {\n          console.log(response);\n          setReset(\"Data Reset\");\n   \n       \n      })\n      .catch(function(error) {\n        setReset(\"Data could not be reset\");\n      \n      });\n  };\n\n  const reindexData = async () => {\n    // Create JSON object\n    const data = {\n      reindex: \"wow!\"\n    };\n\n    await axios\n      .post(\"/index\", qs.stringify(data))\n      .then(response => {\n          console.log(response);\n          setReindex(\"Data Reindex\");\n\n\n      })\n      .catch(function(error) {\n        setReindex(\"Data could not be reindex\");\n\n      });\n  };\n\n  document.body.style = \"background: rgba(0,0,0,0.05);\";\n  let admin = null;\n  \n  if (props.loggedIn) {\n    admin = (\n      <React.Fragment>\n        <Navbar logOutHandler={props.logOutHandler} />\n\n        <Box marginTop={3} marginBottom={3}>\n          <Container maxWidth=\"md\">\n            <Paper className={classes.root}>\n              <Typography variant=\"h4\" component=\"h4\" align=\"left\">\n                Reset the Chatbot's Brain\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                component=\"p\"\n                align=\"left\"\n                style={{ margin: \"10px\" }}\n              >\n                Delete all indexed links and files from the chatbot's lucene brain, but they will still be on IBM Watson and database! You can reindex them anytime :)\n              </Typography>\n              <Button\n                onClick={reindexData}\n                type=\"submit\"\n                color=\"secondary\"\n                variant=\"contained\"\n                style={{\n                  display: \"block\",\n                  marginTop: \"20px\",\n                  position: \"relative\",\n                  marginLeft: \"auto\",\n                  marginBottom: \"20px\",\n                  color:'white'\n                }}\n              >\n               Reindex Data\n              </Button>\n              <Typography>\n                  {reindex}\n              </Typography>\n              <Button\n                onClick={resetData}\n                type=\"submit\"\n                color=\"secondary\"\n                variant=\"contained\"\n                style={{\n                  display: \"block\",\n                  marginTop: \"20px\",\n                  position: \"relative\",\n                  marginLeft: \"auto\",\n                  marginBottom: \"20px\",\n                  backgroundColor:'red',\n                  color:'white'\n                }}\n              >\n               Reset Data\n              </Button>\n              <Typography>\n                  {reset}\n              </Typography>\n            </Paper>\n          </Container>\n        </Box>\n      </React.Fragment>\n    );\n  } else {\n    admin = <h2>Not Logged in</h2>;\n  }\n  return <React.Fragment>{admin}</React.Fragment>;\n};\n\nexport default AdminFeedback;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport AdminDocuments from \"./components/Admin/AdminDocuments/AdminDocuments\";\nimport AdminFeedback from \"./components/Admin/AdminFeedback/AdminFeedback\";\nimport AdminCrawler from './components/Admin/AdminCrawler/AdminCrawler';\nimport AdminReset from './components/Admin/AdminReset/AdminReset';\nimport axios from \"axios\";\nimport qs from \"qs\";\n\n/**\n * Main controller for application, holds state and functions for admin dashboard\n * and home page\n */\nclass App extends Component {\n  /**\n   * State\n   * @param {bool} loggedIn - represents whether the user has successfuly logged i,\n   * @param {bool} showModal - if True the login modal will be visible to the user otherwise it will be hidden\n   * @param {list} files - A list holding all of the files crawled by the crawler\n   *\n   */\n  state = {\n    loggedIn: false,\n    showModal: false,\n    files: [],\n    queries: []\n  };\n\n  /**\n   * Function which changes the showModal portion of state to either True or False\n   * which will result in the login modal being visible or hidden\n   */\n  modalClickHandler = () => {\n    const showModal = !this.state.showModal;\n\n    this.setState({\n      ...this.state,\n      showModal: showModal\n    });\n  };\n\n  /**\n   * Function which changes the loggedIn portion of state to either True or False\n   * which will result in the user being logged out\n   */\n  logOutHandler = () => {\n    const loggedOut = false;\n    this.setState({\n      ...this.state,\n      loggedIn: loggedOut\n    });\n  };\n\n  /**\n   * Creates a POST request which is sent to the backend and if autehtnicated will\n   * alter change the loggedIn part of state to True\n   * @event\n   */\n  loginHandler = async event => {\n    event.preventDefault();\n    // Get variables from event\n    const target = event.target;\n    const username1 = target.elements.username.value;\n    const password1 = target.elements.password.value;\n\n    // Create JSON object\n    const data = {\n      username: username1,\n      password: password1\n    };\n\n    // Make Post request but data must be altered with qs.stringify\n    await axios\n      .post(\"/login\", qs.stringify(data))\n      .then(response => {\n        // If request is successful then set loggedIn to what response['data']['authenticated']\n        // returns\n        const status = response[\"data\"][\"authenticated\"];\n        this.setState({\n          ...this.state,\n          showModal: false,\n          loggedIn: status\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Makes a request to the backend through a post request which\n   * adds a file to Files.db\n   * @event\n   */\n  addFileHandler = async event => {\n    // Get the data from event and add it to a form\n    event.preventDefault();\n    const target = event.target;\n    const file2 = target.file.files[0];\n    let data = new FormData();\n    data.append(\"action\", \"upload\");\n    data.append(\"file\", file2);\n\n    await axios\n      .post(\"/handlefiles\", data)\n      .then(response => {\n        // viewAllFilesHandler needs to be called to update the file list being displayed\n        this.viewAllFilesHandler();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Makes a request to the backend through a post request which\n   * removes a file in Files.db specified in the event object\n   * @event\n   */\n  removeFileHandler = async fileName => {\n    let data = new FormData();\n    data.append(\"action\", \"remove\");\n    data.append(\"file\", fileName);\n    await axios\n      .post(\"/handlefiles\", data)\n      .then(response => {\n        this.viewAllFilesHandler();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Retrieves every file in Files.db and updates state (files) to reflect this.\n   */\n  viewAllFilesHandler = () => {\n    axios\n      .get(\"/handlefiles\")\n      .then(response => {\n        // If the get request is successful state (files) is updated\n      \n        const data = response[\"data\"];\n        let files = [];\n        for (var key in data){\n          files.push(data[key])\n        }\n        this.setState({\n          files: files\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  viewGraphHandler = () => {\n    axios\n      .get(\"/getdata\")\n      .then(response => {\n        // If the get request is successful state (files) is updated\n        const data = response[\"data\"][\"queries\"];\n        this.setState({\n          queries: data\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  viewAllFeedbackHandler = () => {};\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Route\n            exact\n            path=\"/\"\n            render={props => (\n              <Home\n                {...props}\n                loggedIn={this.state.loggedIn}\n                showModal={this.state.showModal}\n                modalClickHandler={this.modalClickHandler}\n                loginHandler={this.loginHandler}\n                logOutHandler={this.logOutHandler}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/admin\"\n            render={props => (\n              <AdminDocuments\n                {...props}\n                files={this.state.files}\n                queries={this.state.queries}\n                removeFileHandler={this.removeFileHandler}\n                viewAllFilesHandler={this.viewAllFilesHandler}\n                addFileHandler={this.addFileHandler}\n                logOutHandler={this.logOutHandler}\n                loggedIn={this.state.loggedIn}\n                viewGraphHandler={this.viewGraphHandler}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/admin/feedback\"\n            render={props => (\n              <AdminFeedback\n                {...props}\n                removeFileHandler={this.removeFileHandler}\n                viewAllFilesHandler={this.viewAllFilesHandler}\n                addFileHandler={this.addFileHandler}\n                loggedIn={this.state.loggedIn}\n                logOutHandler={this.logOutHandler}\n              />\n            )}\n          />\n           <Route\n            exact\n            path=\"/admin/crawler\"\n            render={props => (\n              <AdminCrawler\n                {...props}\n                addFileHandler={this.addFileHandler}\n                loggedIn={this.state.loggedIn}\n                logOutHandler={this.logOutHandler}\n              />\n            )}\n          />\n           <Route\n            exact\n            path=\"/admin/reset\"\n            render={props => (\n              <AdminReset\n                {...props}\n                loggedIn={this.state.loggedIn}\n                logOutHandler={this.logOutHandler}\n              />\n            )}\n          />\n\n         \n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nconst theme = createMuiTheme({\n    palette: {\n       primary: {\n          light: '#fff',\n          main: '#1565C0',\n          dark: '#000'\n       },\n       secondary: {\n         main: 'rgb(38, 166, 154)',\n       },\n    },\n    typography: { \n       useNextVariants: true\n    }\n });\nReactDOM.render(<MuiThemeProvider theme = { theme }><App /></MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar2\":\"Message_avatar2__1fmEj\",\"root\":\"Message_root__MKCis\",\"OpacityLow\":\"Message_OpacityLow__1RTK9\",\"text\":\"Message_text__fvcSR\",\"textBot\":\"Message_textBot__7GQIK\",\"textHuman\":\"Message_textHuman__3hjNd\",\"playButton\":\"Message_playButton__vKEmV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chatbot\":\"Chatbot_Chatbot__2Rr9c\",\"bottomRightPosition\":\"Chatbot_bottomRightPosition__Ohaie\",\"Shadow\":\"Chatbot_Shadow__1kSTy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutUs\":\"AboutUs_AboutUs__3g9tL\",\"Picture\":\"AboutUs_Picture__ETWdp\",\"Text\":\"AboutUs_Text__2udJe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutUs\":\"Features_AboutUs__YO_BQ\",\"Picture\":\"Features_Picture__QK8wJ\",\"Text\":\"Features_Text__3Buzf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Rating\":\"Rating_Rating__6gEpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Login_Modal__13wW1\",\"background\":\"Login_background__3xC1H\"};"],"sourceRoot":""}